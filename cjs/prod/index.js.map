{"version":3,"file":"index.js","mappings":"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","sources":["webpack://library/webpack/bootstrap","webpack://library/webpack/runtime/compat get default export","webpack://library/webpack/runtime/define property getters","webpack://library/webpack/runtime/hasOwnProperty shorthand","webpack://library/webpack/runtime/make namespace object","webpack://library/external commonjs \"prop-types\"","webpack://library/./cjs/dev/Env/index.js","webpack://library/./cjs/dev/Error/index.js","webpack://library/./cjs/dev/util.js","webpack://library/./cjs/dev/AutoFactory/index.js","webpack://library/./cjs/dev/ExtendProps/DateValidator.js","webpack://library/./cjs/dev/ExtendProps/TypedArray.js","webpack://library/./cjs/dev/ExtendProps/Nullly.js","webpack://library/./cjs/dev/ExtendProps/Promise.js","webpack://library/./cjs/dev/ExtendProps/index.js","webpack://library/./cjs/dev/UtilExtends/Promise.js","webpack://library/./cjs/dev/index.js","webpack://library/./cjs/dev/UtilExtends/WrapperApi.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"prop-types\");","let isProduction = () => true;\r\nfunction initEnv(option) {\r\n    isProduction = () => {\r\n        return option.env === 'production';\r\n    };\r\n}\r\nexport { isProduction, initEnv, };\r\n","class ValidatorError extends Error {\r\n    struct = {\r\n        propsName: \"\",\r\n        value: undefined,\r\n        expectedType: \"\",\r\n        preciseType: \"\"\r\n    };\r\n    name = 'ValidatorError';\r\n    propsName;\r\n    info;\r\n    value;\r\n    constructor(msg, propsName, info, value) {\r\n        super(msg);\r\n        this.propsName = propsName;\r\n        this.info = info;\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        let struct;\r\n        if (this.info instanceof ObjectValidatorError || this.info instanceof ValidatorError) {\r\n            this.struct = { propsName: this.info.propsName, value: '', expectedType: '', preciseType: '' };\r\n            return this.info.toString();\r\n        }\r\n        else if (this.info instanceof Error) {\r\n            // eslint-disable-next-line no-useless-escape\r\n            const data = this.info.message.match(/(?<=(`))([\\[\\]\\w<>\\d\\.]+)(?=(`))/g);\r\n            if (data) {\r\n                const [propsName, preciseType, value, expectedType] = data;\r\n                struct = { propsName, value, expectedType, preciseType };\r\n            }\r\n            else {\r\n                //this.info.message \r\n                return this.info.message;\r\n                // struct = { propsName: 'ValidatorError 解析值错误', value: '', expectedType: '', preciseType: '' }\r\n            }\r\n        }\r\n        else {\r\n            struct = this.info;\r\n        }\r\n        this.struct = struct;\r\n        const { propsName, value, expectedType, preciseType } = struct;\r\n        //this.value ??\r\n        return `属性:[${propsName}]的值等于['${value}'],期待为 ${expectedType} 类型/值，实际类型/值： ${preciseType} .`;\r\n    }\r\n}\r\nclass ObjectValidatorError extends Error {\r\n    name = 'ObjectValidatorError';\r\n    source = [];\r\n    propsName;\r\n    constructor(msg, propsName, error) {\r\n        super(msg);\r\n        this.source = error;\r\n        this.propsName = propsName;\r\n    }\r\n    toString() {\r\n        // let result = `{${new Array(this.source.length).fill(0).map((_) => '\"$$\":\"$$\"').join(',')}}`;\r\n        const result = {};\r\n        this.source.forEach(item => {\r\n            const info = item.toString();\r\n            const { struct: { propsName } } = item;\r\n            // result = result.replace(`$$`, propName);\r\n            // result = result.replace(`$$`, info);\r\n            result[propsName] = info;\r\n        });\r\n        return result;\r\n    }\r\n}\r\nfunction flattenError(objectError) {\r\n    const result = {};\r\n    Object.keys(objectError).forEach(key => {\r\n        let value = objectError[key];\r\n        if (!!value === false)\r\n            return;\r\n        if (!(value instanceof ObjectValidatorError)) {\r\n            value = value instanceof ValidatorError ? value : new ValidatorError(`${key} 验证失败`, key, value);\r\n        }\r\n        result[key] = value.toString();\r\n    });\r\n    return JSON.stringify(result, null, 2);\r\n}\r\nfunction showDifferenceTable(typeSpecs, value, objectError) {\r\n    // console.log('object-validator:', error, value);\r\n    // const v_key = Object.keys(value);\r\n    // var languages = {\r\n    //   csharp: { name: \"C#\", paradigm: \"object-oriented\" },\r\n    //   fsharp: { name: \"F#\", paradigm: \"functional\" }\r\n    // };\r\n}\r\nexport { ValidatorError, ObjectValidatorError, flattenError, showDifferenceTable };\r\n","import { isProduction } from './Env';\r\nimport { flattenError, ObjectValidatorError, ValidatorError, showDifferenceTable } from './Error';\r\nconst toTypeString = Function.call.bind(Object.prototype.toString);\r\nconst ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\r\nconst validatorSymbol = Symbol.for('validatorDisplayName');\r\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\r\nfunction isSymbol(propType, propValue) {\r\n    if (propType === 'symbol')\r\n        return true;\r\n    if (!propValue)\r\n        return false;\r\n    if (propValue['@@toStringTag'] === 'Symbol')\r\n        return true;\r\n    if (typeof Symbol === 'function' && propValue instanceof Symbol)\r\n        return true;\r\n    return false;\r\n}\r\nfunction getPreciseType(propValue) {\r\n    if (typeof propValue === 'undefined' || propValue === null) {\r\n        return '' + propValue;\r\n    }\r\n    const propType = getPropType(propValue);\r\n    if (propType === 'object') {\r\n        if (propValue instanceof Date) {\r\n            return 'date';\r\n        }\r\n        else if (propValue instanceof RegExp) {\r\n            return 'regexp';\r\n        }\r\n    }\r\n    return propType;\r\n}\r\nfunction getPropType(propValue) {\r\n    const propType = typeof propValue;\r\n    if (Array.isArray(propValue))\r\n        return 'array';\r\n    if (propValue instanceof RegExp)\r\n        return 'object';\r\n    if (isSymbol(propType, propValue))\r\n        return 'symbol';\r\n    return propType;\r\n}\r\nfunction createChainableTypeChecker(validate) {\r\n    function checkType(isRequired, props, propName, c, l, propFullName) {\r\n        propFullName = propFullName || propName;\r\n        if (props[propName] == null) {\r\n            if (isRequired) {\r\n                return wrapperError(propName, props[propName], '非空', 'null/undefined');\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return validate(props, propName, c, l, propFullName);\r\n        }\r\n    }\r\n    const chainedCheckType = checkType.bind(null, false);\r\n    chainedCheckType.isRequired = checkType.bind(null, true);\r\n    return chainedCheckType;\r\n}\r\nfunction wrapperError(propsName, value, expectedType, preciseType) {\r\n    return new ValidatorError(`${propsName} 验证失败`, propsName, {\r\n        propsName,\r\n        value,\r\n        expectedType,\r\n        preciseType\r\n    });\r\n}\r\n/***\r\n * 验证属性类型 是否为给定的值\r\n * createExpectedTypeChecker('[object Array]')\r\n */\r\nfunction createExpectedTypeChecker(expectedType) {\r\n    function validate(props, propName) {\r\n        const propValue = props[propName];\r\n        const propType = toTypeString(propValue);\r\n        if (propType !== expectedType) {\r\n            const preciseType = getPreciseType(propValue);\r\n            return wrapperError(propName, propValue, expectedType, preciseType);\r\n        }\r\n        return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n}\r\nfunction checkPropTypes(typeSpecs, values, showDifference = true) {\r\n    if (isProduction())\r\n        return null;\r\n    let objectError = {};\r\n    let error = null;\r\n    for (const typeSpecName in typeSpecs) {\r\n        if (typeSpecName === '__tag')\r\n            continue;\r\n        if (has(typeSpecs, typeSpecName)) {\r\n            try {\r\n                if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n                    const err = Error('验证函数类型错误');\r\n                    err.name = 'Invariant Violation';\r\n                    throw err;\r\n                }\r\n                error = typeSpecs[typeSpecName](values, typeSpecName, '', '', null, ReactPropTypesSecret);\r\n                objectError[typeSpecName] = (!!error === false || error instanceof ObjectValidatorError) ? error : new ValidatorError(`${typeSpecName} 验证失败`, typeSpecName, error, values[typeSpecName]);\r\n            }\r\n            catch (ex) {\r\n                objectError = ex;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (Object.values(objectError).filter($1 => !!$1 === true).length > 0) {\r\n        if (showDifference)\r\n            showDifferenceTable(typeSpecs, values, objectError);\r\n        return new Error(flattenError(objectError));\r\n    }\r\n    return null;\r\n}\r\nfunction createArrayOfTypeChecker(typeChecker) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n        const errors = [];\r\n        const propValue = props[propName];\r\n        if (!Array.isArray(propValue)) {\r\n            const propType = getPropType(propValue);\r\n            return wrapperError(propName, propValue, '[object Array]', propType);\r\n            // return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\r\n        }\r\n        for (let i = 0; i < propValue.length; i++) {\r\n            const error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\r\n            error && errors.push(new ValidatorError(`${propFullName} 验证失败`, propFullName, error, propValue));\r\n        }\r\n        return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n}\r\nfunction createShapeTypeChecker(shapeTypes) {\r\n    function validate(props, propName, componentName, location, propFullName) {\r\n        const errors = [];\r\n        const propValue = props[propName];\r\n        const propType = getPropType(propValue);\r\n        if (propType !== 'object') {\r\n            return wrapperError(propName, propValue, 'object', propType);\r\n        }\r\n        for (const key in shapeTypes) {\r\n            const checker = shapeTypes[key];\r\n            if (!checker) {\r\n                continue;\r\n            }\r\n            const error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\r\n            error && errors.push(new ValidatorError(`${propFullName} 验证失败`, propFullName, error, propValue));\r\n        }\r\n        if (errors.length > 0) {\r\n            const objError = new ObjectValidatorError(`验证错误：${propFullName}`, propFullName, errors);\r\n            return objError;\r\n        }\r\n        return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n}\r\nfunction validatorLog(_, typeSpec, msg) {\r\n    !isProduction() && console.log(`Validator Error。 [typeSpec.__tag]:[${typeSpec.__tag}] =>`, msg);\r\n}\r\nexport { validatorSymbol, toTypeString, getPropType, getPreciseType, createChainableTypeChecker, createExpectedTypeChecker, checkPropTypes, validatorLog, \r\n// .shape({})\r\ncreateShapeTypeChecker, \r\n//arrayOf\r\ncreateArrayOfTypeChecker,\r\n// .exact({})\r\n// createStrictShapeTypeChecker\r\n };\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-14 16:17:32\r\n * @Last Modified by: zihao.zhu\r\n * @Last Modified time: 2022-01-24 11:22:06\r\n * @desc : 用于自动生成propsType的验证器\r\n * 1:基础数据\r\n * 2:数组 / 对象 / typedArray\r\n * 3:函数\r\n * 4:复杂对象嵌套\r\n */\r\nimport { toTypeString } from '../util';\r\nimport { isProduction } from '../Env';\r\nconst PropsPlugin = {\r\n    extends: [],\r\n    getTypeSpec: () => '{}',\r\n    extendsFactory: () => { },\r\n};\r\n// ((globalThis || window) as any).PropsPlugin = PropsPlugin;\r\nconst getType = (value) => { const [a, target] = value.match(/\\[object (\\w+)\\]/) ?? []; return target; };\r\nconst Wrapper = (type, topName) => [`${topName}.${type}`, `${topName}.${type}.isRequired`];\r\nexport default function initAutoFactory(WsProps) {\r\n    if (!isProduction()) {\r\n        // const PropsPlugin = ((globalThis || window) as any).PropsPlugin;\r\n        const DefaultOption = { maxDepth: 3, topName: 'WsPropsType' };\r\n        const baseSource = [null, undefined, 1, '', false, () => { }, Symbol.for(''), new Date(), /\\w/, Promise.resolve()];\r\n        const seniorSource = [[], {},];\r\n        let typeArray = [];\r\n        const exec = { option: DefaultOption };\r\n        const getValidator = (type) => {\r\n            type = type.toLocaleLowerCase();\r\n            // var vaFunc = WsProps[type];\r\n            if (type === getType(toTypeString({})).toLocaleLowerCase())\r\n                type = 'shape($)';\r\n            // if (!!vaFunc === false) type = 'any';\r\n            return Wrapper(type, exec.option.topName);\r\n        };\r\n        baseSource.forEach(item => {\r\n            const objStr = toTypeString(item);\r\n            const minType = getType(objStr);\r\n            exec[`exec${minType}`] = function (props, value, isRequire = false) {\r\n                return typeArray.find(item => item.type === objStr)?.validator[Number(isRequire)] || '';\r\n            };\r\n        });\r\n        exec.execAny = function (props, value, isRequire = false) {\r\n            return typeArray.find(item => item.type === toTypeString(null))?.validator[Number(isRequire)] || '';\r\n        };\r\n        exec.execUnknown = function (props, value, isRequire = false) {\r\n            const objStr = toTypeString(value);\r\n            const info = typeArray.find(item => item.type === objStr);\r\n            if (!!info === false) {\r\n                let minType = getType(objStr);\r\n                minType = minType.toLocaleLowerCase();\r\n                if (!!WsProps[minType] === true)\r\n                    return Wrapper(minType, exec.option.topName)[Number(isRequire)];\r\n            }\r\n            return exec.execAny(props, value, isRequire);\r\n        };\r\n        // exec.execUndefined = exec.execAny;\r\n        // exec.execNull = exec.execAny;\r\n        exec.execObject = function (props, target, isRequire = false, depth = 0, option) {\r\n            const objInfo = typeArray.find(item => item.type === toTypeString({})) || {};\r\n            if (Object.keys(target).length === 0 || depth === option.maxDepth)\r\n                return Wrapper(objInfo.minType.toLocaleLowerCase(), exec.option.topName)[Number(isRequire)];\r\n            const result = {};\r\n            Object.keys(target).forEach(key => {\r\n                const value = target[key];\r\n                const func = PropsPlugin.switchExec(value, key, target);\r\n                if (func && typeof func === typeof Function) {\r\n                    result[key] = func(props, value, isRequire, depth + 1, option);\r\n                }\r\n            });\r\n            if (depth === 0)\r\n                return result;\r\n            const { validator } = objInfo;\r\n            const template = validator[Number(isRequire)];\r\n            return template.replace('$', JSON.stringify(result));\r\n        };\r\n        exec.execArray = function (props, value = [], isRequire = false, depth = 0, option) {\r\n            const sourceInfo = typeArray.find(item => item.type === toTypeString([])) || {};\r\n            if (value.length === 0 || depth === option.maxDepth)\r\n                return sourceInfo.validator[Number(isRequire)];\r\n            const execFunc = PropsPlugin.switchExec(value[0]);\r\n            const validator = sourceInfo.validator[Number(false)];\r\n            //TODO:isRequire 是否直接给false\r\n            const result = `${validator}Of(${execFunc(props, value[0], false, depth + 1, option)})${isRequire ? '.isRequired' : ''}`;\r\n            // const \r\n            return result;\r\n        };\r\n        PropsPlugin.switchExec = function switchExec(source, key, target) {\r\n            const type = typeArray.find(item => item.type === toTypeString(source));\r\n            let execFunc = null;\r\n            const fName = type ? `exec${type.minType}` : null;\r\n            if (fName && !!exec[fName] === true) {\r\n                execFunc = exec[fName];\r\n            }\r\n            else {\r\n                const plugin = PropsPlugin.extends.find(item => item.test(source));\r\n                if (plugin) {\r\n                    const { choice, execMap } = plugin;\r\n                    const execName = choice(source, key, target);\r\n                    execFunc = execMap[execName] || exec[execName];\r\n                }\r\n            }\r\n            return execFunc || exec.execAny;\r\n        };\r\n        PropsPlugin.installType = function (source, isRequire = false) {\r\n            typeArray = (function (target) {\r\n                return target.map(item => {\r\n                    const targetType = toTypeString(item);\r\n                    const minType = getType(targetType);\r\n                    const validator = getValidator(minType);\r\n                    return { type: targetType, minType, validator, };\r\n                });\r\n            })([...baseSource, ...seniorSource]);\r\n        };\r\n        PropsPlugin.extendsFactory = function (plugin) {\r\n            if (!!plugin.test && typeof plugin.test === 'function' && !!plugin.choice && typeof plugin.choice === 'function' && !!plugin.execMap) {\r\n                PropsPlugin.extends.push(plugin);\r\n            }\r\n        };\r\n        PropsPlugin.__getID = () => {\r\n            const IDS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n            const IDL = IDS.length;\r\n            let UID = '';\r\n            for (let i = 0; i < 10; i++) {\r\n                UID += IDS.charAt(Math.floor(Math.random() * IDL));\r\n            }\r\n            return UID;\r\n        };\r\n        PropsPlugin.getTypeSpec = function (source, isRequire = true, option = DefaultOption) {\r\n            option = { ...DefaultOption, ...option };\r\n            exec.option = option;\r\n            PropsPlugin.installType();\r\n            const result = PropsPlugin.switchExec(source)('', source, isRequire, 0, option);\r\n            (typeof result === 'object') && (result.__tag = `'${PropsPlugin.__getID()}'`);\r\n            return JSON.stringify(result, null, 2).replace(/\\n/g, '').replace(/\"/g, \"\").replace(/\\\\/g, \"\");\r\n        };\r\n        extendTypedArray(PropsPlugin);\r\n        extendBigInt(PropsPlugin);\r\n    }\r\n    WsProps.PropsPlugin = PropsPlugin;\r\n    return PropsPlugin;\r\n}\r\nfunction extendTypedArray(plugin) {\r\n    // 对typedArray 扩展\r\n    plugin.extendsFactory && plugin.extendsFactory({\r\n        test: (source) => {\r\n            const type = toTypeString(new ArrayBuffer(0));\r\n            const minType = getType(type);\r\n            if (source && !!source.buffer && Object.prototype.toString.call(source.buffer) === type)\r\n                return true;\r\n            if (source && source.constructor && source.constructor.name === minType)\r\n                return true;\r\n            return false;\r\n        },\r\n        choice: (props, propName, typeObject) => 'execTypedArray',\r\n        execMap: {\r\n            execTypedArray: function (props, value, isRequire = false, depth = 0, option) {\r\n                const type = toTypeString(value);\r\n                const minType = getType(type).toLocaleLowerCase().replace('array', '');\r\n                return `${Wrapper(minType, option.topName)[Number(isRequire)]}`;\r\n            }\r\n        },\r\n    });\r\n}\r\nfunction extendBigInt(plugin) {\r\n    plugin.extendsFactory && plugin.extendsFactory({\r\n        test: (source) => {\r\n            return typeof source === typeof 1n;\r\n        },\r\n        choice: (props, propName, typeObject) => 'bigint',\r\n        execMap: {\r\n            bigint: function (props, value, isRequire = false, depth = 0, option) {\r\n                const type = toTypeString(value);\r\n                const minType = getType(type).toLocaleLowerCase();\r\n                return `${Wrapper(minType, option.topName)[Number(isRequire)]}`;\r\n            }\r\n        },\r\n    });\r\n}\r\n","/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-21 14:20:58\r\n * @Last Modified by:   zihao.zhu\r\n * @Last Modified time: 2022-01-21 14:20:58\r\n * @desc : date 验证\r\n */\r\nimport { createChainableTypeChecker, getPreciseType } from \"../util\";\r\n/**\r\n * date String '2021-11-11 00:00:00' 进行匹配\r\n * /(\\d){4}?-(\\d){2}?-(\\d){2}? (\\d){2}?:(\\d){2}?:(\\d){2}?/\r\n * @param regex\r\n * @returns\r\n */\r\nexport function dateValidatorCheckString(regex) {\r\n    function validate(props, propName) {\r\n        const propValue = props[propName];\r\n        if (regex && regex.test(propValue) === false) {\r\n            const preciseType = getPreciseType(propValue);\r\n            return new Error(`${JSON.stringify(props)}-[${propName}]-[${propValue}] is type ${preciseType} , but expected value is test(/^${regex}$/)`);\r\n        }\r\n        return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n}\r\n/**\r\n * 可以被解析成日期的值\r\n */\r\nexport const dateValidatorCheck = ((check) => {\r\n    function validate(props, propName) {\r\n        const propValue = props[propName];\r\n        if (check && !check(propValue)) {\r\n            const preciseType = getPreciseType(propValue);\r\n            return new Error(`${JSON.stringify(props)}-[${propName}]-[${propValue}] is type ${preciseType} , but expected value is test by Date.parse`);\r\n        }\r\n        return null;\r\n    }\r\n    return createChainableTypeChecker(validate);\r\n})((data) => {\r\n    const date = Date.parse(data);\r\n    return typeof date === 'number' && !isNaN(date) && date > 0;\r\n});\r\n","/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-21 14:21:35\r\n * @Last Modified by:   zihao.zhu\r\n * @Last Modified time: 2022-01-21 14:21:35\r\n * @desc : typedArray\r\n */\r\n/* eslint-disable  */\r\nimport { createExpectedTypeChecker, toTypeString } from \"../util\";\r\nexport default {\r\n    buffer: createExpectedTypeChecker(toTypeString(new ArrayBuffer(0))),\r\n    dataview: createExpectedTypeChecker(toTypeString(new DataView(new ArrayBuffer(0)))),\r\n    uint8: createExpectedTypeChecker(toTypeString(new Uint8Array())),\r\n    uint16: createExpectedTypeChecker(toTypeString(new Uint16Array())),\r\n    uint32: createExpectedTypeChecker(toTypeString(new Uint32Array())),\r\n    int8: createExpectedTypeChecker(toTypeString(new Int8Array())),\r\n    int16: createExpectedTypeChecker(toTypeString(new Int16Array())),\r\n    int32: createExpectedTypeChecker(toTypeString(new Int32Array())),\r\n    float32: createExpectedTypeChecker(toTypeString(new Float32Array())),\r\n    float64: createExpectedTypeChecker(toTypeString(new Float64Array())),\r\n    uint8clamped: createExpectedTypeChecker(toTypeString(new Uint8ClampedArray())),\r\n};\r\n","/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-21 14:21:10\r\n * @Last Modified by:   zihao.zhu\r\n * @Last Modified time: 2022-01-21 14:21:10\r\n * @desc : undefined / null\r\n */\r\n/* eslint-disable */\r\nimport { getPreciseType, toTypeString } from \"../util\";\r\nfunction createNullUndefinedTypeChecker(validate) {\r\n    function checkType(isRequired, props, propName) {\r\n        const value = props[propName];\r\n        if (value === null || value === undefined) {\r\n            return validate(props, propName);\r\n        }\r\n        else {\r\n            if (isRequired) {\r\n                return new Error(`The \\`${propName}\\` is null/Undefined as required , but its value is ${toTypeString(value)}`);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    const chainedCheckType = checkType.bind(null, false);\r\n    chainedCheckType.isRequired = checkType.bind(null, true);\r\n    return chainedCheckType;\r\n}\r\nfunction createExpectedTypeChecker(expectedType) {\r\n    function validate(props, propName) {\r\n        const propValue = props[propName];\r\n        const propType = toTypeString(propValue);\r\n        if (propType !== expectedType) {\r\n            const preciseType = getPreciseType(propValue);\r\n            return new Error(`Invalid ${propName} value is ${propValue} ,but expected ${expectedType} but get ${preciseType}`);\r\n        }\r\n        return null;\r\n    }\r\n    return createNullUndefinedTypeChecker(validate);\r\n}\r\nexport default {\r\n    null: createExpectedTypeChecker(toTypeString(null)),\r\n    undefined: createExpectedTypeChecker(toTypeString(undefined)),\r\n};\r\n","/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-21 14:21:29\r\n * @Last Modified by:   zihao.zhu\r\n * @Last Modified time: 2022-01-21 14:21:29\r\n * @desc : promise\r\n */\r\n/* eslint-disable */\r\nimport { createExpectedTypeChecker, toTypeString } from \"../util\";\r\nexport default {\r\n    promise: createExpectedTypeChecker(toTypeString(new Promise(() => { }))),\r\n};\r\n","/* eslint-disable  */\r\nimport { dateValidatorCheckString, dateValidatorCheck } from './DateValidator';\r\nimport * as TypedArray from './TypedArray';\r\nimport * as Null from './Nullly';\r\nimport * as PromiseProps from './Promise';\r\nexport default {\r\n    dateString: dateValidatorCheckString(/(\\d){4}?-(\\d){2}?-(\\d){2}? (\\d){2}?:(\\d){2}?:(\\d){2}?/),\r\n    date: dateValidatorCheck,\r\n    ...TypedArray.default,\r\n    ...Null.default,\r\n    ...PromiseProps.default,\r\n};\r\n","/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-21 14:20:23\r\n * @Last Modified by: zihao.zhu\r\n * @Last Modified time: 2022-01-26 10:19:08\r\n * @desc : Promise 验证\r\n */\r\n/* eslint-disable no-extra-boolean-cast */\r\nimport { checkPropTypes } from '../util';\r\nimport { validatorLog } from \"../util\";\r\nimport { isProduction } from \"../Env\";\r\n(function (prototype) {\r\n    if (!!prototype.validator)\r\n        return;\r\n    prototype.validator = function (typeSpec, handle) {\r\n        if (!isProduction()) {\r\n            const nextHandle = (source) => {\r\n                const result = !!handle ? handle(source) : source;\r\n                const error = checkPropTypes(typeSpec, result);\r\n                if (typeof source === 'object' && source !== null) {\r\n                    Object.defineProperty(source, '__props__error', {\r\n                        configurable: false,\r\n                        enumerable: false,\r\n                        get: () => error,\r\n                    });\r\n                }\r\n                error && validatorLog && validatorLog(source, typeSpec, error);\r\n                return source;\r\n            };\r\n            return this.then(nextHandle);\r\n        }\r\n        return this.then((data) => data);\r\n    };\r\n})((globalThis || this).Promise.prototype);\r\n","/*\r\n * @Author: zihao.zhu@united-imaging.com\r\n * @Date: 2022-01-21 14:19:46\r\n * @Last Modified by: zihao.zhu\r\n * @Last Modified time: 2022-01-25 19:14:08\r\n * @desc : 类型声明和验证\r\n */\r\n/* eslint-disable @typescript-eslint/no-redeclare */\r\nimport PropTypes from 'prop-types';\r\nimport initAutoFactory from './AutoFactory';\r\nimport { initEnv } from './Env';\r\nimport ExtendsValidator from './ExtendProps';\r\nimport { createChainableTypeChecker, checkPropTypes, createExpectedTypeChecker, validatorLog, validatorSymbol, createShapeTypeChecker, createArrayOfTypeChecker } from './util';\r\nimport { WrapperApi } from './UtilExtends/index';\r\nexport var RunEnv;\r\n(function (RunEnv) {\r\n    RunEnv[\"dev\"] = \"development\";\r\n    RunEnv[\"prod\"] = \"production\";\r\n})(RunEnv || (RunEnv = {}));\r\nconst PropsValidator = { env: RunEnv.dev };\r\nfunction initValidator(source) {\r\n    if (!Array.isArray(source))\r\n        source = [source];\r\n    source.forEach((item) => Object.getOwnPropertyNames(item).forEach(key => {\r\n        const target = item[key];\r\n        target[validatorSymbol] = key;\r\n        PropsValidator[key] = target;\r\n    }));\r\n}\r\nfunction extendsValidator(name, validator) {\r\n    PropsValidator[name] = createChainableTypeChecker(validator);\r\n}\r\ninitValidator([\r\n    PropTypes,\r\n    ExtendsValidator,\r\n    {\r\n        checkPropTypes,\r\n        boolean: PropTypes.bool,\r\n        function: PropTypes.func,\r\n        shape: createShapeTypeChecker,\r\n        arrayOf: createArrayOfTypeChecker,\r\n        // exact: createStrictShapeTypeChecker,\r\n    },\r\n    {\r\n        extendsValidator,\r\n        util: { createChainableTypeChecker, createExpectedTypeChecker, validatorLog },\r\n        apiUtil: { WrapperApi },\r\n        setEnv: (env) => { PropsValidator.env = env; },\r\n    }\r\n]);\r\ninitEnv(PropsValidator);\r\ninitAutoFactory(PropsValidator);\r\nexport default PropsValidator;\r\n","import { isProduction } from \"../Env\";\r\nexport default function WrapperApi(Api, spec) {\r\n    if (isProduction())\r\n        Api;\r\n    const createProxy = (api, specSource) => {\r\n        Object.keys(api).forEach(key => {\r\n            const target = api[key];\r\n            if (typeof target === 'object') {\r\n                let spec = specSource && specSource[key];\r\n                if (typeof spec !== 'object')\r\n                    spec = {};\r\n                api[key] = createProxy(target, spec);\r\n            }\r\n        });\r\n        return new Proxy(api, {\r\n            get(target, key) {\r\n                const source = target[key];\r\n                if (typeof source === 'function') {\r\n                    const spec = ((specSource && specSource[key]) || {});\r\n                    return (...args) => {\r\n                        return source(...args).validator(spec.spec, spec.handler);\r\n                    };\r\n                }\r\n                return target[key];\r\n            }\r\n        });\r\n    };\r\n    return createProxy(Api, spec);\r\n    // const keys = Object.keys(Api);\r\n    // const newApi = {};\r\n    // keys.forEach((key) => {\r\n    //   const module = Api[key];\r\n    //   const moduleSpec = SpecSpace.default[key];\r\n    //   newApi[key] = new Proxy(module, {\r\n    //     get(target, propKey) {\r\n    //       const exec = target[propKey];\r\n    //       const spec = moduleSpec[propKey as string];\r\n    //       if (typeof exec === 'function' && typeof spec === 'object') {\r\n    //         return (...args) => {\r\n    //           return (exec(...args) as PromiseExtends<any>).validator(spec.spec, spec.handler);\r\n    //         }\r\n    //       }\r\n    //       return exec;\r\n    //     }\r\n    //   })\r\n    // })\r\n    // return newApi;\r\n}\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","isProduction","ValidatorError","Error","struct","propsName","undefined","expectedType","preciseType","name","info","constructor","msg","super","this","toString","ObjectValidatorError","data","message","match","source","error","result","forEach","item","toTypeString","Function","bind","ReactPropTypesSecret","validatorSymbol","for","has","getPreciseType","propValue","propType","getPropType","Date","RegExp","Array","isArray","isSymbol","createChainableTypeChecker","validate","checkType","isRequired","props","propName","c","l","propFullName","wrapperError","chainedCheckType","createExpectedTypeChecker","checkPropTypes","typeSpecs","values","showDifference","objectError","typeSpecName","err","ex","filter","$1","length","keys","JSON","stringify","flattenError","validatorLog","_","typeSpec","console","log","__tag","PropsPlugin","extends","getTypeSpec","extendsFactory","getType","target","Wrapper","type","topName","dateValidatorCheck","check","date","parse","isNaN","buffer","ArrayBuffer","dataview","DataView","uint8","Uint8Array","uint16","Uint16Array","uint32","Uint32Array","int8","Int8Array","int16","Int16Array","int32","Int32Array","float32","Float32Array","float64","Float64Array","uint8clamped","Uint8ClampedArray","createNullUndefinedTypeChecker","null","promise","Promise","dateString","regex","test","TypedArray","Null","PromiseProps","RunEnv","globalThis","validator","handle","nextHandle","configurable","then","PropsValidator","env","dev","option","PropTypes","ExtendsValidator","boolean","function","shape","shapeTypes","componentName","location","errors","checker","push","arrayOf","typeChecker","i","extendsValidator","util","apiUtil","WrapperApi","Api","spec","createProxy","api","specSource","Proxy","args","handler","setEnv","getOwnPropertyNames","WsProps","DefaultOption","maxDepth","baseSource","resolve","seniorSource","typeArray","exec","getValidator","toLocaleLowerCase","objStr","minType","isRequire","find","Number","execAny","execUnknown","execObject","depth","objInfo","func","switchExec","replace","execArray","sourceInfo","execFunc","fName","plugin","choice","execMap","execName","installType","map","targetType","__getID","IDS","IDL","UID","charAt","Math","floor","random","typeObject","execTypedArray","bigint","extendBigInt","initAutoFactory"],"sourceRoot":""}